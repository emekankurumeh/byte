#include <stdlib.h>
#include <string.h>

#include "value.h"

Value *new_value(State *S, int type) {
  S->gc_count--;
  if (S->gc_count < 0) {
    gc_run(S);
  }
  Value *v = calloc(1, sizeof(Value));
  v->type = type;
  v->mark = 0;
  v->next = S->value;
  S->value = v;

  return v;
}

Value *new_number(State *S, long num) {
  Value *v = new_value(S, OBJ_NUM);
  v->num.value = num;
  state_push(S, v);
  return v;
}

Value *new_string(State *S, char *str) {
  Value *v = new_value(S, OBJ_STR);
  v->str.value = str;
  v->str.len = strlen(str);
  state_push(S, v);
  return v;
}

Value *new_pair(State *S) {
  Value *v = new_value(S, OBJ_PAIR);
  v->pair.head = pop_state(S);
  v->pair.tail = pop_state(S);
  state_push(S, v);
  return v;
}